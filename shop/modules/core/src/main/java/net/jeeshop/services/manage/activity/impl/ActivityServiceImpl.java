package net.jeeshop.services.manage.activity.impl;import java.util.LinkedList;import net.jeeshop.core.ServersManager;import net.jeeshop.services.manage.activity.ActivityService;import com.tuisitang.modules.shop.entity.Activity;import net.jeeshop.services.manage.activity.dao.ActivityDao;import net.jeeshop.services.manage.product.ProductService;import net.jeeshop.services.manage.product.bean.Product;import org.apache.commons.beanutils.ConvertUtils;import org.apache.commons.lang3.StringUtils;public class ActivityServiceImpl extends ServersManager<Activity> implements		ActivityService {	private ActivityDao activityDao;	private ProductService productService;		public ProductService getProductService() {		return productService;	}	public void setProductService(ProductService productService) {		this.productService = productService;	}	public void setActivityDao(ActivityDao activityDao) {		this.activityDao = activityDao;	}		/**	 * 新增活动	 */	@Override	public void insert(Activity e) {		if(StringUtils.isBlank(e.getProductID())){			throw new NullPointerException("参与活动的商品ID不能为空！");		}				super.insert(e);				e.setId(e.getId());				updateProductBindActivityId(e);			}	/**	 * 修改活动	 */	@Override	public void update(Activity e) {		if(StringUtils.isBlank(e.getProductID())){			throw new NullPointerException("参与活动的商品ID不能为空！");		}		//将此活动原来绑定的商品去除，重新绑定一个商品		productService.updateResetThisProductActivityID(e.getId());		updateProductBindActivityId(e);				super.update(e);	}		private void updateProductBindActivityId(Activity e) {		Product pro = new Product();		pro.setActivityID(e.getId());		if(pro.getProductIds()==null){			pro.setProductIds(new LinkedList<Long>());		}				Long[] productIDArr = (Long[])ConvertUtils.convert(StringUtils.split(e.getProductID(),"\\|"), Long.class);//e.getProductID().split("\\|");		for(int i=0;i<productIDArr.length;i++){			pro.getProductIds().add(productIDArr[i]);		}		productService.updateProductBindActivityId(pro);	}}