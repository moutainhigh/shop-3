package com.tuisitang.modules.shop.dao;import java.util.List;import org.apache.ibatis.annotations.Param;import com.tuisitang.modules.shop.entity.Cart;/**     * @{#} CartDao.java   *  * 购物车Dao *     * <p>Copyright: Copyright(c) 2013 </p>  * <p>Company: TST</p> * @version 1.0 * @author <a href="mailto:paninxb@gmail.com">panin</a>    */@MyBatisRepositorypublic interface CartDao extends BaseDao<Cart> {	/**	 * 10. 根据productId和accountId获得Cart	 * 	 * @param productId	 * @param accountId	 * @return	 */	Cart getByProductIdAndAccountId(@Param("productId") Long productId, @Param("accountId") Long accountId, @Param("specId") Long specId);	/**	 * 11. 根据productId和sessionId获得Cart	 * 	 * @param productId	 * @param sessionId	 * @return	 */	Cart getByProductIdAndSessionId(@Param("productId") Long productId, @Param("sessionId") String sessionId, @Param("specId") Long specId);		/**	 * 12. 根据sessionId获得Cart列表	 * 	 * @param sessionId	 * @return	 */	List<Cart> findBySessionId(String sessionId);		/**	 * 13. 根据sessionId或者accountId获得Cart列表	 * 	 * @param sessionId	 * @param accountId	 * @return	 */	List<Cart> findBySessionIdOrAccountId(@Param("sessionId") String sessionId, @Param("accountId") Long accountId);		/**	 * 14. 更加productId删除购物车信息	 * 	 * @param productId	 */	void deleteByProductId(@Param("sessionId") String sessionId, @Param("accountId") Long accountId, @Param("productId")Long productId, @Param("specId")Long specId);		/**	 * 15. 更新数量为quantity	 * 	 * @param id	 * @param quantity	 */	void updateQuantity(@Param("id") Long id, @Param("quantity") int quantity);		/**	 * 16. 根据sessionId/accountId删除Cart	 * 	 * @param sessionId	 * @param accountId	 */	void deleteBySessionIdOrAccountId(@Param("sessionId") String sessionId, @Param("accountId") Long accountId);		/**	 * 17. 根据sessionId或者accountId获得Cart列表	 * 	 * @param sessionId	 * @param accountId	 * @param ids	 * @return	 */	List<Cart> findBySessionIdOrAccountIdAndIds(@Param("sessionId") String sessionId, @Param("accountId") Long accountId, @Param("ids") Long[] ids);		/**	 * 18. 更新Cart的状态	 * 	 * @param ids	 * @param status	 */	void updateStatus(@Param("ids") Long[] ids, @Param("status") String status);		/**	 * 19. 更新accountId	 * 	 * @param sessionId	 * @param accountId	 */	void updateAccountId(@Param("sessionId") String sessionId, @Param("accountId") Long accountId);		/**	 * 20. 批量删除Cart	 * 	 * @param ids	 */	void deleteByIds(@Param("ids") Long[] ids);	}